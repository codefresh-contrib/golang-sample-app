name: panels_ECS_Deploy

# Controls when the workflow will run
on: 
 pull_request:
    types: [labeled]   
jobs:

  deploy_ecs:
    name: Deploy panels ECS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.15.12]
    if: contains(github.event.pull_request.labels.*.name, 'deploy to dev helloworld ecs')
    steps:
      - name: checkout source code
        uses: actions/checkout@v1
      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
         repository: QSD-Software-Development/qsd-unity-next-shared
         path: qsd-unity-next-shared
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: poc-gh
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: my-container
          image: ${{ steps.build-image.outputs.image }}
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
         task-definition: qsd-unity-next-shared/infrastructure/panels/taskdef_panels-dev.json
         service: qsd-unity-dev-ecs-service-panels-uw2
         cluster: my-cluster
         wait-for-service-stability: true
